{"version":3,"sources":["components/TwelveHourTime.js","components/TwentyFourHourTime.js","components/CurrentTime.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TwelveHourTime","useState","Date","toLocaleString","hour","minute","second","hour12","time","setTime","useEffect","setInterval","TwentyFourHourTime","CurrentTime","toggle","setToggle","className","id","onClick","toLocaleDateString","dateStyle","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAwBeA,MAtBf,WACI,MAAwBC,oBAAS,IAAIC,MAAOC,eAAe,QAAS,CAChEC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,KAJZ,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAPAC,qBAAU,kBAAMC,aAAY,kBAAMF,GAAQ,IAAIP,MAAOC,eAAe,QAAS,CACzEC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,OACP,OAAO,IAGR,8BACI,4BAAIC,OCKDI,MAtBf,WACI,MAAwBX,oBAAS,IAAIC,MAAOC,eAAe,QAAS,CAChEC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,KAJZ,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAPAC,qBAAU,kBAAMC,aAAY,kBAAMF,GAAQ,IAAIP,MAAOC,eAAe,QAAS,CACzEC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,OACP,OAAO,IAGR,8BACI,4BAAIC,OCWDK,MAzBf,WACE,MAA4BZ,oBAAS,GAArC,mBAAOa,EAAP,KAAeC,EAAf,KAMA,OACE,sBAAMC,UAAU,WAAhB,SACE,gCACE,mBAAGC,GAAG,WAAWC,QAPH,WACTH,GAATD,IAMI,SACGA,EAAS,cAAC,EAAD,IAAqB,cAAC,EAAD,MAFnC,oBAKE,8BACA,wBACC,IAAIZ,MAAOiB,mBAAmB,QAAS,CACtCC,UAAW,kB,MCNNC,MAbf,WACE,OACE,mCACE,8BACE,kDAEF,8BACE,2D,MCIOC,MATf,WACE,OACE,sBAAKN,UAAU,KAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.835923c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction TwelveHourTime() {\n    const [time, setTime] = useState(new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: true,\n    }));\n\n    useEffect(() => setInterval(() => setTime(new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: true\n    })), 1000), [])\n\n    return (\n        <div>\n            <p>{time}</p>\n        </div>\n    )\n}\n\nexport default TwelveHourTime\n","import React, { useState, useEffect } from 'react'\n\nfunction TwentyFourHourTime() {\n    const [time, setTime] = useState(new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: false,\n    }));\n\n    useEffect(() => setInterval(() => setTime(new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: false\n    })), 1000), [])\n\n    return (\n        <div>\n            <p>{time}</p>\n        </div>\n    )\n}\n\nexport default TwentyFourHourTime\n","import React, { useState } from \"react\";\nimport \"../styles/CurrentTime.css\";\nimport TwelveHourTime from \"./TwelveHourTime\";\nimport TwentyFourHourTime from \"./TwentyFourHourTime\";\n\nfunction CurrentTime() {\n  const [toggle, setToggle] = useState(true);\n\n  const handleClick = () => {\n    toggle ? setToggle(false) : setToggle(true);\n  };\n\n  return (\n    <main className='centered'>\n      <div>\n        <p id='big-time' onClick={handleClick}>\n          {toggle ? <TwelveHourTime /> : <TwentyFourHourTime />}\n        </p>\n        (click to toggle)\n        <p>\n        <br />\n        {new Date().toLocaleDateString(\"en-US\", {\n          dateStyle: \"full\",\n        })}\n      </p>\n      </div>\n    </main>\n  );\n}\n\nexport default CurrentTime;\n","import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return (\n    <header>\n      <div>\n        <h3>Time Converter</h3>\n      </div>\n      <div>\n        <h3>Powered by React.js</h3>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport CurrentTime from \"./components/CurrentTime\";\nimport Header from './components/Header';\nimport \"./styles/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"bg\">\n      <Header />\n      <CurrentTime />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}